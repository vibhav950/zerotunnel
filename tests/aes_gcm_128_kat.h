/**
 * Test vectors sourced from
 *  https://csrc.nist.gov/projects/cryptographic-algorithm-validation-program/cavp-testing-block-cipher-modes
 */

#pragma once

#include "crypto/cipher_defs.h"

#include <stdint.h>

/**
 * Encryption
 */

// Test case #0
const uint8_t aes_gcm_128_key_0[AES_GCM_128_KEY_LEN] = {
    0xc9, 0x39, 0xcc, 0x13, 0x39, 0x7c, 0x1d, 0x37,
    0xde, 0x6a, 0xe0, 0xe1, 0xcb, 0x7c, 0x42, 0x3c};
const uint8_t aes_gcm_128_iv_0[AES_GCM_IV_LEN] = {
    0xb3, 0xd8, 0xcc, 0x01, 0x7c, 0xbb, 0x89, 0xb3, 0x9e, 0x0f, 0x67, 0xe2};
const uint8_t aes_gcm_128_pt_0[16] = {0xc3, 0xb3, 0xc4, 0x1f, 0x11, 0x3a,
                                      0x31, 0xb7, 0x3d, 0x9a, 0x5c, 0xd4,
                                      0x32, 0x10, 0x30, 0x69};
const uint8_t aes_gcm_128_aad_0[16] = {0x24, 0x82, 0x56, 0x02, 0xbd, 0x12,
                                       0xa9, 0x84, 0xe0, 0x09, 0x2d, 0x3e,
                                       0x44, 0x8e, 0xda, 0x5f};
const uint8_t aes_gcm_128_ct_0[16] = {0x93, 0xfe, 0x7d, 0x9e, 0x9b, 0xfd,
                                      0x10, 0x34, 0x8a, 0x56, 0x06, 0xe5,
                                      0xca, 0xfa, 0x73, 0x54};
const uint8_t aes_gcm_128_tag_0[AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x00, 0x32, 0xa1, 0xdc, 0x85, 0xf1, 0xc9, 0x78,
    0x69, 0x25, 0xa2, 0xe7, 0x1d, 0x82, 0x72, 0xdd};

// Test case #1
const uint8_t aes_gcm_128_key_1[AES_GCM_128_KEY_LEN] = {
    0xdf, 0xef, 0xde, 0x23, 0xc6, 0x12, 0x2b, 0xf0,
    0x37, 0x0a, 0xb5, 0x89, 0x0e, 0x80, 0x4b, 0x73};
const uint8_t aes_gcm_128_iv_1[AES_GCM_IV_LEN] = {
    0x92, 0xd6, 0xa8, 0x02, 0x99, 0x90, 0x67, 0x0f, 0x16, 0xde, 0x79, 0xe2};
const uint8_t aes_gcm_128_pt_1[13] = {0x64, 0x26, 0x0a, 0x8c, 0x28, 0x7d, 0xe9,
                                      0x78, 0xe9, 0x6c, 0x75, 0x21, 0xd0};
const uint8_t aes_gcm_128_aad_1[16] = {0xa2, 0xb1, 0x6d, 0x78, 0x25, 0x1d,
                                       0xe6, 0xc1, 0x91, 0xce, 0x35, 0x0e,
                                       0x5c, 0x5e, 0xf2, 0x42};
const uint8_t aes_gcm_128_ct_1[13] = {0xbf, 0x78, 0xde, 0x94, 0x8a, 0x84, 0x7c,
                                      0x17, 0x36, 0x49, 0xd4, 0xb4, 0xd0};
const uint8_t aes_gcm_128_tag_1[AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x9d, 0xa3, 0x82, 0x99, 0x68, 0xcd, 0xc5, 0x07,
    0x94, 0xd1, 0xc3, 0x0d, 0x41, 0xcd, 0x45, 0x15};

// Test case #2
const uint8_t aes_gcm_128_key_2[AES_GCM_128_KEY_LEN] = {
    0x29, 0x8e, 0xfa, 0x1c, 0xcf, 0x29, 0xcf, 0x62,
    0xae, 0x68, 0x24, 0xbf, 0xc1, 0x95, 0x57, 0xfc};
const uint8_t aes_gcm_128_iv_2[AES_GCM_IV_LEN] = {
    0x6f, 0x58, 0xa9, 0x3f, 0xe1, 0xd2, 0x07, 0xfa, 0xe4, 0xed, 0x2f, 0x6d};
const uint8_t aes_gcm_128_pt_2[32] = {
    0xcc, 0x38, 0xbc, 0xcd, 0x6b, 0xc5, 0x36, 0xad, 0x91, 0x9b, 0x13,
    0x95, 0xf5, 0xd6, 0x38, 0x01, 0xf9, 0x9f, 0x80, 0x68, 0xd6, 0x5c,
    0xa5, 0xac, 0x63, 0x87, 0x2d, 0xaf, 0x16, 0xb9, 0x39, 0x01};
const uint8_t aes_gcm_128_aad_2[16] = {0x02, 0x1f, 0xaf, 0xd2, 0x38, 0x46,
                                       0x39, 0x73, 0xff, 0xe8, 0x02, 0x56,
                                       0xe5, 0xb1, 0xc6, 0xb1};
const uint8_t aes_gcm_128_ct_2[32] = {
    0xdf, 0xce, 0x4e, 0x9c, 0xd2, 0x91, 0x10, 0x3d, 0x7f, 0xe4, 0xe6,
    0x33, 0x51, 0xd9, 0xe7, 0x9d, 0x3d, 0xfd, 0x39, 0x1e, 0x32, 0x67,
    0x10, 0x46, 0x58, 0x21, 0x2d, 0xa9, 0x65, 0x21, 0xb7, 0xdb};
const uint8_t aes_gcm_128_tag_2[AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x54, 0x24, 0x65, 0xef, 0x59, 0x93, 0x16, 0xf7,
    0x3a, 0x7a, 0x56, 0x05, 0x09, 0xa2, 0xd9, 0xf2};

// Test case #3
const uint8_t aes_gcm_128_key_3[AES_GCM_128_KEY_LEN] = {
    0x7f, 0xdd, 0xb5, 0x74, 0x53, 0xc2, 0x41, 0xd0,
    0x3e, 0xfb, 0xed, 0x3a, 0xc4, 0x4e, 0x37, 0x1c};
const uint8_t aes_gcm_128_iv_3[AES_GCM_IV_LEN] = {
    0xee, 0x28, 0x3a, 0x3f, 0xc7, 0x55, 0x75, 0xe3, 0x3e, 0xfd, 0x48, 0x87};
const uint8_t aes_gcm_128_pt_3[16] = {0xd5, 0xde, 0x42, 0xb4, 0x61, 0x64,
                                      0x6c, 0x25, 0x5c, 0x87, 0xbd, 0x29,
                                      0x62, 0xd3, 0xb9, 0xa2};
const uint8_t aes_gcm_128_aad_3[0] = {};
const uint8_t aes_gcm_128_ct_3[16] = {0x2c, 0xcd, 0xa4, 0xa5, 0x41, 0x5c,
                                      0xb9, 0x1e, 0x13, 0x5c, 0x2a, 0x0f,
                                      0x78, 0xc9, 0xb2, 0xfd};
const uint8_t aes_gcm_128_tag_3[AES_GCM_AUTH_TAG_LEN_LONG] = {
    0xb3, 0x6d, 0x1d, 0xf9, 0xb9, 0xd5, 0xe5, 0x96,
    0xf8, 0x3e, 0x8b, 0x7f, 0x52, 0x97, 0x1c, 0xb3};

// Test case #4
const uint8_t aes_gcm_128_key_4[AES_GCM_128_KEY_LEN] = {
    0xfe, 0x9b, 0xb4, 0x7d, 0xeb, 0x3a, 0x61, 0xe4,
    0x23, 0xc2, 0x23, 0x18, 0x41, 0xcf, 0xd1, 0xfb};
const uint8_t aes_gcm_128_iv_4[AES_GCM_IV_LEN] = {
    0x4d, 0x32, 0x8e, 0xb7, 0x76, 0xf5, 0x00, 0xa2, 0xf7, 0xfb, 0x47, 0xaa};
const uint8_t aes_gcm_128_pt_4[13] = {0xf1, 0xcc, 0x38, 0x18, 0xe4, 0x21, 0x87,
                                      0x6b, 0xb6, 0xb8, 0xbb, 0xd6, 0xc9};
const uint8_t aes_gcm_128_aad_4[0] = {};
const uint8_t aes_gcm_128_ct_4[13] = {0xb8, 0x8c, 0x5c, 0x19, 0x77, 0xb3, 0x5b,
                                      0x51, 0x7b, 0x0a, 0xea, 0xe9, 0x67};
const uint8_t aes_gcm_128_tag_4[AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x43, 0xfd, 0x47, 0x27, 0xfe, 0x5c, 0xdb, 0x4b,
    0x5b, 0x42, 0x81, 0x8d, 0xea, 0x7e, 0xf8, 0xc9};

// Test case #5
const uint8_t aes_gcm_128_key_5[AES_GCM_128_KEY_LEN] = {
    0x99, 0x71, 0x07, 0x10, 0x59, 0xab, 0xc0, 0x09,
    0xe4, 0xf2, 0xbd, 0x69, 0x86, 0x9d, 0xb3, 0x38};
const uint8_t aes_gcm_128_iv_5[AES_GCM_IV_LEN] = {
    0x07, 0xa9, 0xa9, 0x5e, 0xa3, 0x82, 0x1e, 0x9c, 0x13, 0xc6, 0x32, 0x51};
const uint8_t aes_gcm_128_pt_5[32] = {
    0xf5, 0x4b, 0xc3, 0x50, 0x1f, 0xed, 0x4f, 0x6f, 0x6d, 0xfb, 0x5e,
    0xa8, 0x01, 0x06, 0xdf, 0x0b, 0xd8, 0x36, 0xe6, 0x82, 0x62, 0x25,
    0xb7, 0x5c, 0x02, 0x22, 0xf6, 0xe8, 0x59, 0xb3, 0x59, 0x83};
const uint8_t aes_gcm_128_aad_5[0] = {};
const uint8_t aes_gcm_128_ct_5[32] = {
    0x05, 0x56, 0xc1, 0x59, 0xf8, 0x4e, 0xf3, 0x6c, 0xb1, 0x60, 0x2b,
    0x45, 0x26, 0xb1, 0x20, 0x09, 0xc7, 0x75, 0x61, 0x1b, 0xff, 0xb6,
    0x4d, 0xc0, 0xd9, 0xca, 0x92, 0x97, 0xcd, 0x2c, 0x6a, 0x01};
const uint8_t aes_gcm_128_tag_5[AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x78, 0x70, 0xd9, 0x11, 0x7f, 0x54, 0x81, 0x1a,
    0x34, 0x69, 0x70, 0xf1, 0xde, 0x09, 0x0c, 0x41};

/**
 * Decryption
 *
 * Note: The tag is appended to the ciphertext.
 * data = ciphertext || tag
 */

// Test case #6
const uint8_t aes_gcm_128_key_6[AES_GCM_128_KEY_LEN] = {
    0x81, 0x6e, 0x39, 0x07, 0x04, 0x10, 0xcf, 0x21,
    0x84, 0x90, 0x4d, 0xa0, 0x3e, 0xa5, 0x07, 0x5a};
const uint8_t aes_gcm_128_iv_6[AES_GCM_IV_LEN] = {
    0x32, 0xc3, 0x67, 0xa3, 0x36, 0x26, 0x13, 0xb2, 0x7f, 0xc3, 0xe6, 0x7e};
const uint8_t aes_gcm_128_pt_6[16] = {0xec, 0xaf, 0xe9, 0x6c, 0x67, 0xa1,
                                      0x64, 0x67, 0x44, 0xf1, 0xc8, 0x91,
                                      0xf5, 0xe6, 0x94, 0x27};
const uint8_t aes_gcm_128_aad_6[16] = {0xf2, 0xa3, 0x07, 0x28, 0xed, 0x87,
                                       0x4e, 0xe0, 0x29, 0x83, 0xc2, 0x94,
                                       0x43, 0x5d, 0x3c, 0x16};
const uint8_t aes_gcm_128_data_6[16 + AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x55, 0x2e, 0xbe, 0x01, 0x2e, 0x7b, 0xcf, 0x90, 0xfc, 0xef, 0x71,
    0x2f, 0x83, 0x44, 0xe8, 0xf1, 0xec, 0xaa, 0xe9, 0xfc, 0x68, 0x27,
    0x6a, 0x45, 0xab, 0x0c, 0xa3, 0xcb, 0x9d, 0xd9, 0x53, 0x9f};
// const uint8_t aes_gcm_128_tag_6[AES_GCM_AUTH_TAG_LEN_LONG] = {
//     0xec, 0xaa, 0xe9, 0xfc, 0x68, 0x27, 0x6a, 0x45,
//     0xab, 0x0c, 0xa3, 0xcb, 0x9d, 0xd9, 0x53, 0x9f};

// Test case #7 (FAIL)
const uint8_t aes_gcm_128_key_7[AES_GCM_128_KEY_LEN] = {
    0x86, 0x7f, 0xc5, 0xd5, 0x47, 0x6d, 0x50, 0x08,
    0xf0, 0x70, 0x3d, 0x81, 0xe3, 0x62, 0x22, 0x55};
const uint8_t aes_gcm_128_iv_7[AES_GCM_IV_LEN] = {
    0x22, 0x94, 0x55, 0x29, 0xdf, 0xf9, 0x47, 0xc3, 0xc9, 0x26, 0x4d, 0xf7};
const uint8_t aes_gcm_128_aad_7[16] = {0x26, 0x1a, 0x9e, 0xfd, 0x4f, 0x32,
                                       0xbc, 0x3d, 0x07, 0xc1, 0x15, 0xb4,
                                       0xed, 0xcf, 0x8a, 0xdf};
const uint8_t aes_gcm_128_data_7[16 + AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x1c, 0x78, 0x50, 0x25, 0xe5, 0xa2, 0x67, 0x8e, 0x4b, 0x29, 0xb2,
    0x92, 0x76, 0xe3, 0x95, 0xbb, 0x87, 0xfd, 0xf1, 0x26, 0x18, 0x46,
    0x16, 0x4a, 0x95, 0x0c, 0x37, 0xa3, 0xf2, 0xee, 0xa1, 0x7d};
// const uint8_t aes_gcm_128_tag_7[AES_GCM_AUTH_TAG_LEN_LONG] = {
//     0x87, 0xfd, 0xf1, 0x26, 0x18, 0x46, 0x16, 0x4a,
//     0x95, 0x0c, 0x37, 0xa3, 0xf2, 0xee, 0xa1, 0x7d};

// Test case #8
const uint8_t aes_gcm_128_key_8[AES_GCM_128_KEY_LEN] = {
    0x66, 0x0e, 0xb7, 0x6f, 0x3d, 0x8b, 0x6e, 0xc5,
    0x4e, 0x01, 0xb8, 0xa3, 0x62, 0x63, 0x12, 0x4b};
const uint8_t aes_gcm_128_iv_8[AES_GCM_IV_LEN] = {
    0x3d, 0x8c, 0xf1, 0x6e, 0x26, 0x28, 0x80, 0xdd, 0xfe, 0x0c, 0x86, 0xeb};
const uint8_t aes_gcm_128_pt_8[13] = {0x2e, 0xfb, 0xae, 0xdf, 0xec, 0x3c, 0xfe,
                                      0x4a, 0xc3, 0x2f, 0x20, 0x1f, 0xa5};
const uint8_t aes_gcm_128_aad_8[16] = {0x85, 0x60, 0xb1, 0x0c, 0x01, 0x1a,
                                       0x1d, 0x41, 0x90, 0xeb, 0x46, 0xa3,
                                       0x69, 0x2d, 0xaa, 0x17};
const uint8_t aes_gcm_128_data_8[13 + AES_GCM_AUTH_TAG_LEN_LONG] = {
    0xb1, 0xee, 0x05, 0xf1, 0x41, 0x5a, 0x61, 0xd7, 0x63, 0x7e,
    0x97, 0xc5, 0xf3, 0x76, 0x1c, 0xb8, 0x4a, 0x96, 0x3e, 0x1d,
    0xb1, 0xa4, 0xab, 0x2c, 0x5f, 0x90, 0x4c, 0x09, 0xdb};
// const uint8_t aes_gcm_128_tag_8[AES_GCM_AUTH_TAG_LEN_LONG] = {
//     0x76, 0x1c, 0xb8, 0x4a, 0x96, 0x3e, 0x1d, 0xb1,
//     0xa4, 0xab, 0x2c, 0x5f, 0x90, 0x4c, 0x09, 0xdb};

// Test case #9 (FAIL)
const uint8_t aes_gcm_128_key_9[AES_GCM_128_KEY_LEN] = {
    0x2a, 0xa3, 0xdf, 0xce, 0xf6, 0x8c, 0x33, 0x3d,
    0x0f, 0x03, 0xcb, 0xbb, 0x60, 0xa2, 0xda, 0xc8};
const uint8_t aes_gcm_128_iv_9[AES_GCM_IV_LEN] = {
    0x66, 0x7a, 0x61, 0xd7, 0x32, 0x78, 0x0f, 0x56, 0x94, 0x12, 0x8d, 0xaf};
const uint8_t aes_gcm_128_aad_9[16] = {0x22, 0x7f, 0x0d, 0xdd, 0xc7, 0x1a,
                                       0xa2, 0xcc, 0x20, 0xc9, 0x01, 0xfc,
                                       0xb8, 0xdb, 0x0e, 0x15};
const uint8_t aes_gcm_128_data_9[13 + AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x9f, 0xad, 0xe7, 0xc4, 0x33, 0xcb, 0x44, 0xd5, 0xeb, 0xec,
    0x14, 0x09, 0x5d, 0x85, 0xf3, 0x0c, 0x02, 0x96, 0x29, 0x00,
    0xf8, 0x89, 0x1a, 0x9b, 0x69, 0x87, 0x17, 0x22, 0x56};
// const uint8_t aes_gcm_128_tag_9[AES_GCM_AUTH_TAG_LEN_LONG] = {
//     0x85, 0xf3, 0x0c, 0x02, 0x96, 0x29, 0x00, 0xf8,
//     0x89, 0x1a, 0x9b, 0x69, 0x87, 0x17, 0x22, 0x56};

// Test case #10
const uint8_t aes_gcm_128_key_10[AES_GCM_128_KEY_LEN] = {
    0xaf, 0xa2, 0x72, 0xc0, 0x3d, 0x03, 0x43, 0xf8,
    0x82, 0x00, 0x8f, 0x6e, 0x16, 0x3d, 0x60, 0x47};
const uint8_t aes_gcm_128_iv_10[AES_GCM_IV_LEN] = {
    0x27, 0x1b, 0xa2, 0x1f, 0x8f, 0xdc, 0xac, 0x34, 0xdc, 0x93, 0xbe, 0x54};
const uint8_t aes_gcm_128_pt_10[32] = {
    0xf3, 0xee, 0x01, 0x42, 0x3f, 0x19, 0x2c, 0x36, 0x03, 0x35, 0x42,
    0x22, 0x1c, 0x55, 0x45, 0xdd, 0x93, 0x9d, 0xe5, 0x2a, 0xda, 0x18,
    0xb9, 0xe8, 0xb7, 0x2b, 0xa1, 0x7d, 0x02, 0xc5, 0xdd, 0xdd};
const uint8_t aes_gcm_128_aad_10[16] = {0xcd, 0xf5, 0x49, 0x6a, 0x50, 0x21,
                                        0x46, 0x83, 0x30, 0x4a, 0xec, 0x0a,
                                        0x80, 0x33, 0x7f, 0x9a};
const uint8_t aes_gcm_128_data_10[32 + AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x36, 0xa4, 0x02, 0x9c, 0x9e, 0x7d, 0x03, 0x07, 0xd3, 0x1c, 0x29, 0xce,
    0xa8, 0x85, 0xbb, 0x6c, 0x80, 0x22, 0x45, 0x20, 0x16, 0xa2, 0x97, 0x54,
    0xba, 0x8a, 0x34, 0x4c, 0x5b, 0xbf, 0xc3, 0xe1, 0xed, 0x8d, 0x91, 0x6c,
    0x17, 0x1f, 0x06, 0x88, 0xd7, 0xe7, 0xcc, 0xa5, 0x47, 0xab, 0x3a, 0xb2};
// const uint8_t aes_gcm_128_tag_10[AES_GCM_AUTH_TAG_LEN_LONG] = {
//     0xed, 0x8d, 0x91, 0x6c, 0x17, 0x1f, 0x06, 0x88,
//     0xd7, 0xe7, 0xcc, 0xa5, 0x47, 0xab, 0x3a, 0xb2};

// Test case #11 (FAIL)
const uint8_t aes_gcm_128_key_11[AES_GCM_128_KEY_LEN] = {
    0x33, 0x08, 0xbf, 0x97, 0x8d, 0xca, 0x6b, 0xd7,
    0xf5, 0xfe, 0x4c, 0xcd, 0x6d, 0x0e, 0x7c, 0x24};
const uint8_t aes_gcm_128_iv_11[AES_GCM_IV_LEN] = {
    0x85, 0x99, 0x6c, 0x78, 0x5a, 0x83, 0x49, 0x3c, 0xc7, 0x16, 0x5c, 0x11};
const uint8_t aes_gcm_128_aad_11[16] = {0xb0, 0xeb, 0xb2, 0x6b, 0x9e, 0x27,
                                        0xc4, 0x4c, 0x26, 0x54, 0x3e, 0x25,
                                        0x7b, 0x7c, 0x7e, 0xb4};
const uint8_t aes_gcm_128_data_11[32 + AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x4c, 0x8f, 0x0c, 0x7a, 0xd7, 0x3f, 0xc4, 0x69, 0xb4, 0xb3, 0x85, 0xf8,
    0x07, 0x41, 0xf3, 0x01, 0x4e, 0xc2, 0x36, 0xe2, 0x9c, 0xa9, 0x06, 0x8b,
    0x8e, 0x55, 0xed, 0x6f, 0xb2, 0xfc, 0x9b, 0x9b, 0x8b, 0x55, 0x28, 0xd6,
    0xef, 0x87, 0xeb, 0x0b, 0xe9, 0xb6, 0x70, 0x8f, 0xab, 0x7d, 0x65, 0x4c};
// const uint8_t aes_gcm_128_tag_11[AES_GCM_AUTH_TAG_LEN_LONG] = {
//     0x8b, 0x55, 0x28, 0xd6, 0xef, 0x87, 0xeb, 0x0b,
//     0xe9, 0xb6, 0x70, 0x8f, 0xab, 0x7d, 0x65, 0x4c};

// Test case #12
const uint8_t aes_gcm_128_key_12[AES_GCM_128_KEY_LEN] = {
    0x33, 0x24, 0x06, 0x36, 0xcd, 0x32, 0x36, 0x16,
    0x5f, 0x1a, 0x55, 0x3b, 0x77, 0x3e, 0x72, 0x8e};
const uint8_t aes_gcm_128_iv_12[AES_GCM_IV_LEN] = {
    0x17, 0xc4, 0xd6, 0x14, 0x93, 0xec, 0xdc, 0x8f, 0x31, 0x70, 0x0b, 0x12};
const uint8_t aes_gcm_128_pt_12[16] = {0x95, 0x69, 0x5a, 0x5b, 0x12, 0xf2,
                                       0x87, 0x0b, 0x9c, 0xc5, 0xfd, 0xc8,
                                       0xf2, 0x18, 0xa9, 0x7d};
const uint8_t aes_gcm_128_aad_12[0] = {};
const uint8_t aes_gcm_128_data_12[16 + AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x47, 0xbb, 0x7e, 0x23, 0xf7, 0xbd, 0xfe, 0x05, 0xa8, 0x09, 0x1a,
    0xc9, 0x0e, 0x4f, 0x8b, 0x2e, 0xb7, 0x23, 0xc7, 0x0e, 0x93, 0x1d,
    0x97, 0x85, 0xf4, 0x0f, 0xd4, 0xab, 0x1d, 0x61, 0x2d, 0xc9};
// const uint8_t aes_gcm_128_tag_12[AES_GCM_AUTH_TAG_LEN_LONG] = {
//     0xb7, 0x23, 0xc7, 0x0e, 0x93, 0x1d, 0x97, 0x85,
//     0xf4, 0x0f, 0xd4, 0xab, 0x1d, 0x61, 0x2d, 0xc9};

// Test case #13 (FAIL)
const uint8_t aes_gcm_128_key_13[AES_GCM_128_KEY_LEN] = {
    0x51, 0x64, 0xdf, 0x85, 0x6f, 0x1e, 0x9c, 0xac,
    0x04, 0xa7, 0x9b, 0x80, 0x8d, 0xc5, 0xbe, 0x39};
const uint8_t aes_gcm_128_iv_13[AES_GCM_IV_LEN] = {
    0xe7, 0x69, 0x25, 0xd5, 0x35, 0x5e, 0x05, 0x84, 0xce, 0x87, 0x1b, 0x2b};
const uint8_t aes_gcm_128_aad_13[0] = {};
const uint8_t aes_gcm_128_data_13[16 + AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x02, 0x16, 0xc8, 0x99, 0xc8, 0x8d, 0x6e, 0x32, 0xc9, 0x58, 0xc7,
    0xe5, 0x53, 0xda, 0xa5, 0xbc, 0xa1, 0x45, 0x31, 0x98, 0x96, 0x32,
    0x9c, 0x96, 0xdf, 0x29, 0x1f, 0x64, 0xef, 0xbe, 0x0e, 0x3a};
// const uint8_t aes_gcm_128_tag_13[AES_GCM_AUTH_TAG_LEN_LONG] = {
//     0xa1, 0x45, 0x31, 0x98, 0x96, 0x32, 0x9c, 0x96,
//     0xdf, 0x29, 0x1f, 0x64, 0xef, 0xbe, 0x0e, 0x3a};

// Test case #14
const uint8_t aes_gcm_128_key_14[AES_GCM_128_KEY_LEN] = {
    0x28, 0xea, 0xd7, 0xfd, 0x21, 0x79, 0xe0, 0xd1,
    0x2a, 0xa6, 0xd5, 0xd8, 0x8c, 0x58, 0xc2, 0xdc};
const uint8_t aes_gcm_128_iv_14[AES_GCM_IV_LEN] = {
    0x50, 0x55, 0x34, 0x7f, 0x18, 0xb4, 0xd5, 0xad, 0xd0, 0xae, 0x5c, 0x41};
const uint8_t aes_gcm_128_pt_14[13] = {0x3b, 0x95, 0xb9, 0x81, 0x08, 0x6e, 0xe7,
                                       0x3c, 0xc4, 0xd0, 0xcc, 0x14, 0x22};
const uint8_t aes_gcm_128_aad_14[0] = {};
const uint8_t aes_gcm_128_data_14[13 + AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x14, 0x2d, 0x82, 0x10, 0xc3, 0xfb, 0x84, 0x77, 0x4c, 0xdb,
    0xd0, 0x44, 0x7a, 0x5f, 0xd3, 0x21, 0xd9, 0xcd, 0xb0, 0x19,
    0x52, 0xdc, 0x85, 0xf0, 0x34, 0x73, 0x6c, 0x2a, 0x7d};
// const uint8_t aes_gcm_128_tag_14[AES_GCM_AUTH_TAG_LEN_LONG] = {
// 0x5f, 0xd3, 0x21, 0xd9, 0xcd, 0xb0, 0x19, 0x52,
// 0xdc, 0x85, 0xf0, 0x34, 0x73, 0x6c, 0x2a, 0x7d};

// Test case #15 (FAIL)
const uint8_t aes_gcm_128_key_15[AES_GCM_128_KEY_LEN] = {
    0x7d, 0x7b, 0x6c, 0x98, 0x81, 0x37, 0xb8, 0xd4,
    0x70, 0xc5, 0x7b, 0xf6, 0x74, 0xa0, 0x9c, 0x87};
const uint8_t aes_gcm_128_iv_15[AES_GCM_IV_LEN] = {
    0x9e, 0xdf, 0x2a, 0xa9, 0x70, 0xd0, 0x16, 0xac, 0x96, 0x2e, 0x1f, 0xd8};
const uint8_t aes_gcm_128_aad_15[0] = {};
const uint8_t aes_gcm_128_data_15[13 + AES_GCM_AUTH_TAG_LEN_LONG] = {
    0xa8, 0x5b, 0x66, 0xc3, 0xcb, 0x5e, 0xab, 0x91, 0xd5, 0xbd,
    0xc8, 0xbc, 0x0e, 0xdc, 0x05, 0x4e, 0xfc, 0x01, 0xf3, 0xaf,
    0xd2, 0x1d, 0x9c, 0x24, 0x84, 0x81, 0x9f, 0x56, 0x9a};
// const uint8_t aes_gcm_128_tag_15[AES_GCM_AUTH_TAG_LEN_LONG] = {
// 0xdc, 0x05, 0x4e, 0xfc, 0x01, 0xf3, 0xaf, 0xd2,
// 0x1d, 0x9c, 0x24, 0x84, 0x81, 0x9f, 0x56, 0x9a};

// Test case #16
const uint8_t aes_gcm_128_key_16[AES_GCM_128_KEY_LEN] = {
    0xbf, 0xd4, 0x14, 0xa6, 0x21, 0x29, 0x58, 0xa6,
    0x07, 0xa0, 0xf5, 0xd3, 0xab, 0x48, 0x47, 0x1d};
const uint8_t aes_gcm_128_iv_16[AES_GCM_IV_LEN] = {
    0x86, 0xd8, 0xea, 0x0a, 0xb8, 0xe4, 0x0d, 0xcc, 0x48, 0x1c, 0xd0, 0xe2};
const uint8_t aes_gcm_128_pt_16[32] = {
    0xa6, 0xb7, 0x6a, 0x06, 0x6e, 0x63, 0x39, 0x2c, 0x94, 0x43, 0xe6,
    0x02, 0x72, 0xce, 0xae, 0xb9, 0xd2, 0x5c, 0x99, 0x1b, 0x0f, 0x2e,
    0x55, 0xe2, 0x80, 0x4e, 0x16, 0x8c, 0x05, 0xea, 0x59, 0x1a};
const uint8_t aes_gcm_128_aad_16[0] = {};
const uint8_t aes_gcm_128_data_16[32 + AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x62, 0x17, 0x1d, 0xb3, 0x31, 0x93, 0x29, 0x2d, 0x93, 0x0b, 0xf6, 0x64,
    0x73, 0x47, 0x65, 0x2c, 0x1e, 0xf3, 0x33, 0x16, 0xd7, 0xfe, 0xca, 0x99,
    0xd5, 0x4f, 0x1d, 0xb4, 0xfc, 0xf5, 0x13, 0xf8, 0xc2, 0x82, 0x80, 0xaa,
    0x5c, 0x6c, 0x7a, 0x8b, 0xd3, 0x66, 0xf2, 0x8c, 0x1c, 0xfd, 0x1f, 0x6e};
// const uint8_t aes_gcm_128_tag_16[AES_GCM_AUTH_TAG_LEN_LONG] = {
//     0xc2, 0x82, 0x80, 0xaa, 0x5c, 0x6c, 0x7a, 0x8b,
//     0xd3, 0x66, 0xf2, 0x8c, 0x1c, 0xfd, 0x1f, 0x6e};

// Test case #17 (FAIL)
const uint8_t aes_gcm_128_key_17[AES_GCM_128_KEY_LEN] = {
    0xc3, 0xaa, 0x04, 0x00, 0xea, 0x3f, 0x51, 0x07,
    0xfb, 0xe8, 0xaa, 0x01, 0x1e, 0x13, 0x91, 0xb3};
const uint8_t aes_gcm_128_iv_17[AES_GCM_IV_LEN] = {
    0x9c, 0x22, 0x00, 0x84, 0x75, 0xe7, 0xa9, 0x07, 0xf7, 0xab, 0xc9, 0x66};
const uint8_t aes_gcm_128_aad_17[0] = {};
const uint8_t aes_gcm_128_data_17[32 + AES_GCM_AUTH_TAG_LEN_LONG] = {
    0x96, 0xa0, 0x6e, 0x1f, 0xdb, 0x00, 0x82, 0xeb, 0xc6, 0x44, 0x13, 0x12,
    0xdd, 0x9c, 0xd6, 0xed, 0x6f, 0x7f, 0xac, 0x74, 0x5f, 0xac, 0xc3, 0x68,
    0xb5, 0xab, 0x2a, 0x39, 0x51, 0xbd, 0x75, 0xa6, 0x6e, 0x84, 0xd6, 0x64,
    0x48, 0x06, 0x8f, 0x67, 0x88, 0x94, 0x04, 0x26, 0x3a, 0x04, 0x7a, 0x88};
// const uint8_t aes_gcm_128_tag_17[AES_GCM_AUTH_TAG_LEN_LONG] = {
// 0x6e, 0x84, 0xd6, 0x64, 0x48, 0x06, 0x8f, 0x67,
// 0x88, 0x94, 0x04, 0x26, 0x3a, 0x04, 0x7a, 0x88};
